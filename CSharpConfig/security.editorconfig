# CA rules from CA3001 upwards


#
# -- Security Rules, injection vulnerabilities
#
# CA3001: Review code for SQL injection vulnerabilities	When working with untrusted input and SQL commands, be mindful of SQL inje ...
dotnet_diagnostic.CA3001.severity = warning
# CA3002: Review code for XSS vulnerabilities	When working with untrusted input from web requests, be mindful of cross-site script ...
dotnet_diagnostic.CA3002.severity = warning
# CA3003: Review code for file path injection vulnerabilities	When working with untrusted input from web requests, be mindful of u ...
dotnet_diagnostic.CA3003.severity = warning
# CA3004: Review code for information disclosure vulnerabilities	Disclosing exception information gives attackers insight into the ...
dotnet_diagnostic.CA3004.severity = warning
# CA3005: Review code for LDAP injection vulnerabilities	When working with untrusted input, be mindful of Lightweight Directory Ac ...
dotnet_diagnostic.CA3005.severity = warning
# CA3006: Review code for process command injection vulnerabilities	When working with untrusted input, be mindful of command injec ...
dotnet_diagnostic.CA3006.severity = warning
# CA3007: Review code for open redirect vulnerabilities	When working with untrusted input, be mindful of open redirect vulnerabili ...
dotnet_diagnostic.CA3007.severity = warning
# CA3008: Review code for XPath injection vulnerabilities	When working with untrusted input, be mindful of XPath injection attacks ...
dotnet_diagnostic.CA3008.severity = warning
# CA3009: Review code for XML injection vulnerabilities	When working with untrusted input, be mindful of XML injection attacks.
dotnet_diagnostic.CA3009.severity = warning
# CA3010: Review code for XAML injection vulnerabilities	When working with untrusted input, be mindful of XAML injection attacks.  ...
dotnet_diagnostic.CA3010.severity = warning
# CA3011: Review code for DLL injection vulnerabilities	When working with untrusted input, be mindful of loading untrusted code. I ...
dotnet_diagnostic.CA3011.severity = warning
# CA3012: Review code for regex injection vulnerabilities	When working with untrusted input, be mindful of regex injection attacks ...
dotnet_diagnostic.CA3012.severity = warning
# CA3061: Do not add schema by URL	Do not use the unsafe overload of the Add method because it may cause dangerous external refere ...
dotnet_diagnostic.CA3061.severity = none
# CA3075: Insecure DTD Processing	If you use insecure DTDProcessing instances or reference external entity sources, the parser may ...
dotnet_diagnostic.CA3075.severity = none
# CA3076: Insecure XSLT Script Execution	If you execute Extensible Stylesheet Language Transformations (XSLT) in .NET applications ...
dotnet_diagnostic.CA3076.severity = none
# CA3077: Insecure Processing in API Design, XML Document and XML Text Reader	When designing an API derived from XMLDocument and X ...
dotnet_diagnostic.CA3077.severity = none
# CA3147: Mark verb handlers with ValidateAntiForgeryToken	When designing an ASP.NET MVC controller, be mindful of cross-site requ ...
dotnet_diagnostic.CA3147.severity = none
#
# -- Security Rules, cryptographics vulnerabilitis
#
# CA5350: Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = none
# CA5351: Do Not Use Broken Cryptographic Algorithms	Broken cryptographic algorithms are not considered secure and their use shoul ...
dotnet_diagnostic.CA5351.severity = none
# CA5358: Do Not Use Unsafe Cipher Modes	Do Not Use Unsafe Cipher Modes.
dotnet_diagnostic.CA5358.severity = warning
# CA5359: Do not disable certificate validation	A certificate can help authenticate the identity of the server. Clients should val ...
dotnet_diagnostic.CA5359.severity = none
# CA5360: Do not call dangerous methods in deserialization	Insecure deserialization is a vulnerability which occurs when untrusted ...
dotnet_diagnostic.CA5360.severity = none
# CA5361: Do not disable Schannel use of strong crypto	Setting Switch.System.Net.DontEnableSchUseStrongCrypto to true weakens the  ...
dotnet_diagnostic.CA5361.severity = warning
# CA5362: Potential reference cycle in deserialized object graph	If deserializing untrusted data, then any code processing the des ...
dotnet_diagnostic.CA5362.severity = warning
# CA5363: Do not disable request validation	Request validation is a feature in ASP.NET that examines HTTP requests and determines  ...
dotnet_diagnostic.CA5363.severity = none
# CA5364: Do not use deprecated security protocols	Transport Layer Security (TLS) secures communication between computers, most co ...
dotnet_diagnostic.CA5364.severity = none
# CA5365: Do Not Disable HTTP Header Checking	HTTP header checking enables encoding of the carriage return and newline characters, ...
dotnet_diagnostic.CA5365.severity = none
# CA5366: Use XmlReader For DataSet Read XML	Using a DataSet to read XML with untrusted data may load dangerous external reference ...
dotnet_diagnostic.CA5366.severity = none
# CA5367: Do Not Serialize Types With Pointer Fields	This rule checks whether there's a serializable class with a pointer field or ...
dotnet_diagnostic.CA5367.severity = warning
# CA5368: Set ViewStateUserKey For Classes Derived From Page	Setting the ViewStateUserKey property can help you prevent attacks on ...
dotnet_diagnostic.CA5368.severity = none
# CA5369: Use XmlReader for Deserialize	Processing untrusted DTD and XML schemas may enable loading dangerous external references, ...
dotnet_diagnostic.CA5369.severity = none
# CA5370: Use XmlReader for validating reader	Processing untrusted DTD and XML schemas may enable loading dangerous external refer ...
dotnet_diagnostic.CA5370.severity = none
# CA5371: Use XmlReader for schema read	Processing untrusted DTD and XML schemas may enable loading dangerous external references. ...
dotnet_diagnostic.CA5371.severity = none
# CA5372: Use XmlReader for XPathDocument	Processing XML from untrusted data may load dangerous external references, which can be  ...
dotnet_diagnostic.CA5372.severity = none
# CA5373: Do not use obsolete key derivation function	This rule detects the invocation of weak key derivation methods System.Secur ...
dotnet_diagnostic.CA5373.severity = none
# CA5374: Do Not Use XslTransform	This rule checks if System.Xml.Xsl.XslTransform is instantiated in the code. System.Xml.Xsl.XslT ...
dotnet_diagnostic.CA5374.severity = none
# CA5375: Do not use account shared access signature	An account SAS can delegate access to read, write, and delete operations on b ...
dotnet_diagnostic.CA5375.severity = warning
# CA5376: Use SharedAccessProtocol HttpsOnly	SAS is sensitive data that can't be transported in plain text on HTTP.
dotnet_diagnostic.CA5376.severity = warning
# CA5377: Use container level access policy	A container-level access policy can be modified or revoked at any time. It provides gr ...
dotnet_diagnostic.CA5377.severity = warning
# CA5378: Do not disable ServicePointManagerSecurityProtocols	Setting Switch.System.ServiceModel.DisableUsingServicePointManagerSe ...
dotnet_diagnostic.CA5378.severity = warning
# CA5379: Do not use weak key derivation function algorithm	The Rfc2898DeriveBytes class defaults to using the SHA1 algorithm. You ...
dotnet_diagnostic.CA5379.severity = none
# CA5380: Do not add certificates to root store	This rule detects code that adds a certificate into the Trusted Root Certification ...
dotnet_diagnostic.CA5380.severity = warning
# CA5381: Ensure certificates are not added to root store	This rule detects code that potentially adds a certificate into the Trus ...
dotnet_diagnostic.CA5381.severity = warning
# CA5382: Use secure cookies in ASP.NET Core	Applications available over HTTPS must use secure cookies, which indicate to the brow ...
dotnet_diagnostic.CA5382.severity = warning
# CA5383: Ensure use secure cookies in ASP.NET Core	Applications available over HTTPS must use secure cookies, which indicate to t ...
dotnet_diagnostic.CA5383.severity = warning
# CA5384: Do not use digital signature algorithm (DSA)	DSA is a weak asymmetric encryption algorithm.
dotnet_diagnostic.CA5384.severity = none
# CA5385: Use Rivest–Shamir–Adleman (RSA) algorithm with sufficient key size	An RSA key smaller than 2048 bits is more vulnerable  ...
dotnet_diagnostic.CA5385.severity = none
# CA5386: Avoid hardcoding SecurityProtocolType value	Transport Layer Security (TLS) secures communication between computers, most ...
dotnet_diagnostic.CA5386.severity = warning
# CA5387: Do not use weak key derivation function with insufficient iteration count	This rule checks if a cryptographic key was ge ...
dotnet_diagnostic.CA5387.severity = warning
# CA5388: Ensure sufficient iteration count when using weak key derivation function	This rule checks if a cryptographic key was ge ...
dotnet_diagnostic.CA5388.severity = warning
# CA5389: Do not add archive item's path to the target file system path	File path can be relative and can lead to file system acce ...
dotnet_diagnostic.CA5389.severity = warning
# CA5390: Do not hard-code encryption key	For a symmetric algorithm to be successful, the secret key must be known only to the sen ...
dotnet_diagnostic.CA5390.severity = warning
# CA5391: Use antiforgery tokens in ASP.NET Core MVC controllers	Handling a POST, PUT, PATCH, or DELETE request without validating ...
dotnet_diagnostic.CA5391.severity = warning
# CA5392: Use DefaultDllImportSearchPaths attribute for P/Invokes	By default, P/Invoke functions using DllImportAttribute probe a  ...
dotnet_diagnostic.CA5392.severity = warning
# CA5393: Do not use unsafe DllImportSearchPath value	There could be a malicious DLL in the default DLL search directories and ass ...
dotnet_diagnostic.CA5393.severity = warning
# CA5394: Do not use insecure randomness
dotnet_diagnostic.CA5394.severity = warning
# CA5395: Miss HttpVerb attribute for action methods	All the action methods that create, edit, delete, or otherwise modify data ne ...
dotnet_diagnostic.CA5395.severity = warning
# CA5396: Set HttpOnly to true for HttpCookie	As a defense in depth measure, ensure security sensitive HTTP cookies are marked as  ...
dotnet_diagnostic.CA5396.severity = warning
# CA5397: Do not use deprecated SslProtocols values	Transport Layer Security (TLS) secures communication between computers, most c ...
dotnet_diagnostic.CA5397.severity = none
# CA5398: Avoid hardcoded SslProtocols values	Transport Layer Security (TLS) secures communication between computers, most commonl ...
dotnet_diagnostic.CA5398.severity = warning
# CA5399: Definitely disable HttpClient certificate revocation list check	A revoked certificate isn't trusted anymore. It could be ...
dotnet_diagnostic.CA5399.severity = warning
# CA5400: Ensure HttpClient certificate revocation list check is not disabled	A revoked certificate isn't trusted anymore. It coul ...
dotnet_diagnostic.CA5400.severity = warning
# CA5401: Do not use CreateEncryptor with non-default IV	Symmetric encryption should always use a non-repeatable initialization ve ...
dotnet_diagnostic.CA5401.severity = warning
# CA5402: Use CreateEncryptor with the default IV	Symmetric encryption should always use a non-repeatable initialization vector to ...
dotnet_diagnostic.CA5402.severity = warning
# CA5403: Do not hard-code certificate	The data or rawData parameter of a X509Certificate or X509Certificate2 constructor is hard- ...
dotnet_diagnostic.CA5403.severity = warning
# CA5404: Do not disable token validation checks	TokenValidationParameters properties that control token validation should not be  ...
dotnet_diagnostic.CA5404.severity = warning
# CA5405: Do not always skip token validation in delegates	The callback assigned to AudienceValidator or LifetimeValidator always  ...
dotnet_diagnostic.CA5405.severity = warning


